{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\OneDrive\\\\Desktop\\\\React jsUdemy\\\\section 8\\\\src\\\\components\\\\UserForm\\\\UserForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./UserForm.module.css\";\nimport Button from '../UI/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserForm = props => {\n  _s();\n\n  const [userText, setUserText] = useState(\"\");\n  const [numberText, setNumberText] = useState(\"\");\n  const [error, setError] = useState();\n\n  const handleClick = event => {\n    event.preventDefault();\n\n    if (userText.trim().length === 0 || numberText.trim().length === 0) {\n      setError({\n        title: 'Invalid input',\n        message: 'Please enter a valid name and age (non-empty values).'\n      });\n      return;\n    }\n\n    if (numberText < 1) {\n      setError({\n        title: 'Invalid age',\n        message: 'Please enter a valid age (> 0).'\n      });\n      return;\n    }\n\n    const submitData = {\n      id: Math.random().toString(),\n      name: userText,\n      age: numberText\n    }; // console.log(submitData)\n\n    props.onSaveFormData(submitData);\n    setUserText(\"\");\n    setNumberText(\"\");\n  };\n\n  const userInputTextHandler = event => {\n    setUserText(event.target.value);\n  };\n\n  const userAgeTextHandler = event => {\n    setNumberText(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleClick,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"UserName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userText,\n        onChange: userInputTextHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"age\",\n        children: \"Age(Years)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: numberText,\n        onChange: userAgeTextHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserForm, \"kyaSLfLhFRx/C3muZaN5GPMTTbg=\");\n\n_c = UserForm;\nexport default UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"sources":["C:/Users/Administrator/OneDrive/Desktop/React jsUdemy/section 8/src/components/UserForm/UserForm.js"],"names":["React","useState","Button","UserForm","props","userText","setUserText","numberText","setNumberText","error","setError","handleClick","event","preventDefault","trim","length","title","message","submitData","id","Math","random","toString","name","age","onSaveFormData","userInputTextHandler","target","value","userAgeTextHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,uBAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM,CAACQ,KAAD,EAAOC,QAAP,IAAmBT,QAAQ,EAAjC;;AAEA,QAAMU,WAAW,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAIR,QAAQ,CAACS,IAAT,GAAgBC,MAAhB,KAA2B,CAA3B,IAAgCR,UAAU,CAACO,IAAX,GAAkBC,MAAlB,KAA6B,CAAjE,EAAoE;AAClEL,MAAAA,QAAQ,CAAC;AACPM,QAAAA,KAAK,EAAE,eADA;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAIA;AACD;;AAED,QAAIV,UAAU,GAAG,CAAjB,EAAoB;AAClBG,MAAAA,QAAQ,CAAC;AACPM,QAAAA,KAAK,EAAE,aADA;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAIA;AACD;;AACD,UAAMC,UAAU,GAAC;AACbC,MAAAA,EAAE,EAACC,IAAI,CAACC,MAAL,GAAcC,QAAd,EADU;AAEbC,MAAAA,IAAI,EAAClB,QAFQ;AAGdmB,MAAAA,GAAG,EAACjB;AAHU,KAAjB,CAlB6B,CAuB7B;;AACAH,IAAAA,KAAK,CAACqB,cAAN,CAAqBP,UAArB;AAEAZ,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GA5BD;;AA8BA,QAAMkB,oBAAoB,GAAId,KAAD,IAAW;AACtCN,IAAAA,WAAW,CAACM,KAAK,CAACe,MAAN,CAAaC,KAAd,CAAX;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAIjB,KAAD,IAAW;AACpCJ,IAAAA,aAAa,CAACI,KAAK,CAACe,MAAN,CAAaC,KAAd,CAAb;AACD,GAFD;;AAGA,sBACE;AAAA,eAEEnB,KAAK,iBACH,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAMA;AAAM,MAAA,QAAQ,EAAEE,WAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEN,QAA1B;AAAoC,QAAA,QAAQ,EAAEqB;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAEnB,UAA5B;AAAwC,QAAA,QAAQ,EAAEsB;AAAlD;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YANA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA5DD;;GAAM1B,Q;;KAAAA,Q;AA8DN,eAAeA,QAAf","sourcesContent":["import React,{useState} from \"react\";\r\nimport \"./UserForm.module.css\";\r\nimport Button from '../UI/Button'\r\n\r\nconst UserForm = (props) => {\r\n  const [userText, setUserText] = useState(\"\");\r\n\r\n  const [numberText, setNumberText] = useState(\"\");\r\n\r\n  const [error,setError] = useState()\r\n\r\n  const handleClick = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (userText.trim().length === 0 || numberText.trim().length === 0) {\r\n      setError({\r\n        title: 'Invalid input',\r\n        message: 'Please enter a valid name and age (non-empty values).',\r\n      })\r\n      return;\r\n    }\r\n\r\n    if (numberText < 1) {\r\n      setError({\r\n        title: 'Invalid age',\r\n        message: 'Please enter a valid age (> 0).',\r\n      });\r\n      return;\r\n    }\r\n    const submitData={\r\n        id:Math.random().toString(),\r\n        name:userText,\r\n       age:numberText\r\n    }\r\n    // console.log(submitData)\r\n    props.onSaveFormData(submitData)\r\n\r\n    setUserText(\"\");\r\n    setNumberText(\"\");\r\n  };\r\n\r\n  const userInputTextHandler = (event) => {\r\n    setUserText(event.target.value);\r\n  };\r\n\r\n  const userAgeTextHandler = (event) => {\r\n    setNumberText(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n    {\r\n      error && (\r\n        <ErrorModal/>\r\n      )\r\n    }\r\n    <form onSubmit={handleClick}>\r\n      <label htmlFor=\"username\">UserName</label>\r\n      <input type=\"text\" value={userText} onChange={userInputTextHandler} />\r\n      <label htmlFor=\"age\">Age(Years)</label>\r\n      <input type=\"number\" value={numberText} onChange={userAgeTextHandler} />\r\n      <Button type=\"submit\">Add User</Button>\r\n    </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n"]},"metadata":{},"sourceType":"module"}